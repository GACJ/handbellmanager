<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MotionControllerManager</name>
    </assembly>
    <members>
        <member name="M:MotionControllerManager.MotionControllerManager.#ctor">
            <summary>
            A Framework for using ActionXL Motion Controllers
            </summary>
        </member>
        <member name="M:MotionControllerManager.MotionControllerManager.initialize(System.Boolean)">
            <summary>
            Clear all currently detected joysticks and re-detect all joysticks attached to the system,
            enumerating all attached Motion Controllers.
            </summary>
            <param name="initDetecors">Whether or not to also initialize a motion detector for each joystick.</param>
        </member>
        <member name="M:MotionControllerManager.MotionControllerManager.initDetectors">
            <summary>
            Activates or resets the MotionDetectors attached to the Motion Controllers
            </summary>
        </member>
        <member name="M:MotionControllerManager.MotionControllerManager.releaseDetectors">
            <summary>
            Removes all MotionDetectors
            </summary>
        </member>
        <member name="M:MotionControllerManager.MotionControllerManager.update(System.Double)">
            <summary>
            Poll each motion controller and get its state.  This function  should be called every frame.
            </summary>
            <param name="seconds">The number of seconds that have passed since the last update.</param>
        </member>
        <member name="M:MotionControllerManager.MotionControllerManager.getAxis(System.Int32)">
            <summary>
            Get the value of an axis on Motion Controller 0
            </summary>
            <param name="axis">The axis to check (X=0, Y=1, Z=2)</param>
            <returns>The value of the axis from -2048 to +2047</returns>
        </member>
        <member name="M:MotionControllerManager.MotionControllerManager.getAxis(System.Int32,System.Int32)">
            <summary>
            Get the value of an axis on a Motion Controller
            </summary>
            <param name="axis">The axis to check (X=0, Y=1, Z=2)</param>
            <param name="joyStick">The zero-based index of the Motion Controller to read</param>
            <returns>The value of the axis from -2048 to +2047</returns>
        </member>
        <member name="M:MotionControllerManager.MotionControllerManager.getButton(System.Int32)">
            <summary>
            Check the status of a button on Motion Controller 0
            </summary>
            <param name="button">The zero-based index of the button to read</param>
            <returns>True if the button is down</returns>
        </member>
        <member name="M:MotionControllerManager.MotionControllerManager.getButton(System.Int32,System.Int32)">
            <summary>
            Check the status of a button on a Motion Controller
            </summary>
            <param name="button">The zero-based index of the button to read</param>
            <param name="joyStick">The zero-based index of the Motion Controller to read</param>
            <returns>True if the button is down</returns>
        </member>
        <member name="M:MotionControllerManager.MotionControllerManager.getButtonPress(System.Int32)">
            <summary>
            Check whether a button was pressed this frame (getButton() was false last update() and is true this update()) on Motion Controller 0
            </summary>
            <param name="button">The zero-based index of the button to read</param>
            <returns>True if the button was just pressed</returns>
        </member>
        <member name="M:MotionControllerManager.MotionControllerManager.getButtonPress(System.Int32,System.Int32)">
            <summary>
            Check whether a button was pressed this frame (getButton() was false last update() and is true this update()) on a Motion Controller
            </summary>
            <param name="button">The zero-based index of the button to read</param>
            <param name="joyStick">The zero-based index of the Motion Controller to read</param>
            <returns>True if the button was just pressed</returns>
        </member>
        <member name="P:MotionControllerManager.MotionControllerManager.Count">
            <summary>
            The number of attached and detected Motion Controllers
            </summary>
        </member>
        <member name="M:MotionControllerManager.MotionDetector.rotationOnly">
            <summary>
            Test to see if the controller was moved or only tilted.
            </summary>
            <returns>True if the cotroller was only tilted in place</returns>
        </member>
        <member name="M:MotionControllerManager.MotionDetector.feedData(System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Stores this frame of accelerometer data for simple gesture recognition.
            </summary>
            <param name="x">The x-axis acceleration</param>
            <param name="y">The y-axis acceleration</param>
            <param name="z">The z-axis acceleration</param>
            <param name="dT">time elapsed since last frame in seconds</param>
        </member>
        <member name="M:MotionControllerManager.MotionDetector.Clear">
            <summary>
            Clears all gesture data.
            </summary>
        </member>
        <member name="M:MotionControllerManager.MotionDetector.isLevel">
            <summary>
            Detects whether the Motion Controller is level (the buttons are pointing at the ceiling) and still.
            </summary>
        </member>
        <member name="M:MotionControllerManager.MotionDetector.isTippedLeft">
            <summary>
            Detects whether the Motion Controller is tipped left (the buttons are pointing to the left) and still.
            </summary>
        </member>
        <member name="M:MotionControllerManager.MotionDetector.isTippedUp">
            <summary>
            Detects whether the Motion Controller is tipped up (the wire is pointing down) and still.
            </summary>
        </member>
        <member name="M:MotionControllerManager.MotionDetector.isTippedRight">
            <summary>
            Detects whether the Motion Controller is tipped right (the buttons are pointing to the right) and still.
            </summary>
        </member>
        <member name="M:MotionControllerManager.MotionDetector.isTippedDown">
            <summary>
            Detects whether the Motion Controller is tipped down (the wire is pointing up) and still.
            </summary>
        </member>
        <member name="M:MotionControllerManager.MotionDetector.isFlipped">
            <summary>
            Detects whether the Motion Controller is flipped over (the buttons facing the floor) and still.
            </summary>
        </member>
        <member name="M:MotionControllerManager.MotionDetector.hasShakenX">
            <summary>
            Detects whether the Motion Controller has been shaken left and right in the last second.
            </summary>
        </member>
        <member name="M:MotionControllerManager.MotionDetector.hasShakenZ">
            <summary>
            Detects whether the Motion Controller has been shaken up and down in the last second.
            </summary>
        </member>
        <member name="M:MotionControllerManager.MotionDetector.hasCircled">
            <summary>
            Detects whether the Motion Controller has been moved in a circle in the last second.
            </summary>
        </member>
        <member name="M:MotionControllerManager.MotionDetector.hasShakenY">
            <summary>
            Detects whether the Motion Controller has been shaken in and out in the last second.
            </summary>
        </member>
        <member name="M:MotionControllerManager.MotionDetector.hasSlashed">
            <summary>
            Detects whether the Motion Controller has been slashed like a sword.
            </summary>
        </member>
        <member name="M:MotionControllerManager.MotionDetector.isFreeFalling">
            <summary>
            Detects whether the Motion Controller is in free fall (has been dropped or thrown)
            </summary>
        </member>
    </members>
</doc>
